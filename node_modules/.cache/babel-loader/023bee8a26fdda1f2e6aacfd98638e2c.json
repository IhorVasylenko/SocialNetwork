{"ast":null,"code":"var _jsxFileName = \"/Users/ihorvasilenko/Desktop/work/it-incubator/react/social-networks/SocialNetwork/src/component/User/content/wall/messages/Messages.jsx\";\nimport React from \"react\";\nimport s from './Messages.module.css';\nimport DialogItem from './dialogs/Dialogs';\nimport { ContactMessages, MyMessages } from \"./letters/Letters\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { required, maxLengthCreator } from \"../../../utils/validators/validators\";\nimport { Textarea } from \"../../../../common/formsControl/FormsControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserContentWallMessages = props => {\n  let dialogsElements = props.dialogsData.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    id: d.id,\n    name: d.name,\n    avatar: d.avatar,\n    passed: d.passed,\n    seen: d.seen\n  }, d.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this));\n  let contactMessagesElements = props.cntactMessagesData.map(c => /*#__PURE__*/_jsxDEV(ContactMessages, {\n    id: c.id,\n    name: c.name,\n    avatar: c.avatar,\n    passed: c.passed,\n    message: c.message\n  }, c.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this));\n  let myMessagesElements = props.myMessagesData.map(m => /*#__PURE__*/_jsxDEV(MyMessages, {\n    id: m.id,\n    name: m.name,\n    avatar: m.avatar,\n    passed: m.passed,\n    message: m.message\n  }, m.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this));\n\n  let addNewMessage = value => {\n    props.addNewMessage(value.newMessageText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogsWrapper,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: s.dialogs,\n        children: dialogsElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.scrollWrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.messagesWrapper,\n        children: [contactMessagesElements, myMessagesElements]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MessageReduxForm, {\n      onSubmit: addNewMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_c = UserContentWallMessages;\nconst maxLength10 = maxLengthCreator(10);\n\nconst MessageForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: s.addMessageWrapper,\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      className: s.formControl,\n      name: 'newMessageText',\n      component: Textarea,\n      placeholder: 'What do you want to write?',\n      validate: [required, maxLength10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = MessageForm;\nconst MessageReduxForm = reduxForm({\n  form: 'newMessageForm'\n})(MessageForm);\nexport default UserContentWallMessages;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserContentWallMessages\");\n$RefreshReg$(_c2, \"MessageForm\");","map":{"version":3,"sources":["/Users/ihorvasilenko/Desktop/work/it-incubator/react/social-networks/SocialNetwork/src/component/User/content/wall/messages/Messages.jsx"],"names":["React","s","DialogItem","ContactMessages","MyMessages","Field","reduxForm","required","maxLengthCreator","Textarea","UserContentWallMessages","props","dialogsElements","dialogsData","map","d","id","name","avatar","passed","seen","contactMessagesElements","cntactMessagesData","c","message","myMessagesElements","myMessagesData","m","addNewMessage","value","newMessageText","wrapper","dialogsWrapper","dialogs","scrollWrapper","messagesWrapper","maxLength10","MessageForm","addMessageWrapper","handleSubmit","formControl","MessageReduxForm","form"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport s from './Messages.module.css';\r\nimport DialogItem from './dialogs/Dialogs';\r\nimport {ContactMessages, MyMessages} from \"./letters/Letters\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, maxLengthCreator} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../../common/formsControl/FormsControl\";\r\n\r\nconst UserContentWallMessages = (props) => {\r\n\r\n    let dialogsElements = props.dialogsData.map(d =>\r\n        <DialogItem key={d.id} id={d.id} name={d.name} avatar={d.avatar} passed={d.passed} seen={d.seen} />);\r\n\r\n    let contactMessagesElements = props.cntactMessagesData.map(c =>\r\n        <ContactMessages key={c.id} id={c.id} name={c.name} avatar={c.avatar} passed={c.passed} message={c.message}/>);\r\n\r\n    let myMessagesElements = props.myMessagesData.map(m =>\r\n        <MyMessages key={m.id} id={m.id} name={m.name} avatar={m.avatar} passed={m.passed} message={m.message}/>);\r\n\r\n    let addNewMessage = (value) => {\r\n        props.addNewMessage(value.newMessageText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.dialogsWrapper}>\r\n                <ul className={s.dialogs}>\r\n                    {dialogsElements}\r\n                </ul>\r\n            </div>\r\n            <div className={s.scrollWrapper}>\r\n                <div className={s.messagesWrapper}>\r\n                    {contactMessagesElements}\r\n                    {myMessagesElements}\r\n                </div>\r\n            </div>\r\n            <MessageReduxForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <form className={s.addMessageWrapper} onSubmit={props.handleSubmit}>\r\n            <button>Add message</button>\r\n            <Field className={s.formControl} name={'newMessageText'} component={Textarea}\r\n                   placeholder={'What do you want to write?'} validate={[required, maxLength10]} />\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm ({form: 'newMessageForm'}) (MessageForm)\r\n\r\nexport default UserContentWallMessages"]},"metadata":{},"sourceType":"module"}