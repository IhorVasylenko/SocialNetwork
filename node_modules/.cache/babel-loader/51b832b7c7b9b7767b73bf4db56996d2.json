{"ast":null,"code":"import { authAPI } from \"../../api/api\";\nimport { stopSubmit } from \"redux-form\";\nconst SET_USER_DATA = 'goToIt/auth/SET_USER_DATA';\nlet initialState = {\n  id: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return { ...state,\n        ...action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (id, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: {\n    id,\n    email,\n    login,\n    isAuth\n  }\n});\nexport const authMe = () => async dispatch => {\n  let data = await authAPI.me();\n\n  if (data.resultCode === 0) {\n    let {\n      id,\n      email,\n      login,\n      isAuth\n    } = data.data;\n    dispatch(setAuthUserData(id, email, login, true));\n  }\n};\nexport const login = (email, password, rememberMe) => async dispatch => {\n  let data = await authAPI.login(email, password, rememberMe);\n\n  if (data.resultCode === 0) {\n    dispatch(authMe());\n  } else {\n    let message = data.messages.length > 0 ? data.messages[0] : 'Some error';\n    dispatch(stopSubmit('login', {\n      _error: message\n    }));\n  }\n};\nexport const logout = () => async dispatch => {\n  let data = await authAPI.logout();\n\n  if (data.resultCode === 0) {\n    dispatch(setAuthUserData(null, null, null, false));\n  }\n};\nexport default authReducer;","map":{"version":3,"sources":["/Users/ihorvasilenko/Desktop/work/it-incubator/react/social-networks/SocialNetwork/src/component/UI/state/authReducer.js"],"names":["authAPI","stopSubmit","SET_USER_DATA","initialState","id","email","login","isAuth","authReducer","state","action","type","payload","setAuthUserData","authMe","dispatch","data","me","resultCode","password","rememberMe","message","messages","length","_error","logout"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,eAAtB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AAEA,MAAMC,aAAa,GAAG,2BAAtB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,EAAE,EAAE,IADW;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,MAAM,EAAE;AAJO,CAAnB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,aAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEH,WAAGC,MAAM,CAACE;AAFP,OAAP;;AAKJ;AACI,aAAOH,KAAP;AARR;AAUH,CAXD;;AAaA,OAAO,MAAMI,eAAe,GAAG,CAACT,EAAD,EAAKC,KAAL,EAAYC,KAAZ,EAAmBC,MAAnB,MAA+B;AAC1DI,EAAAA,IAAI,EAAET,aADoD;AACrCU,EAAAA,OAAO,EAAE;AAAER,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB;AAD4B,CAA/B,CAAxB;AAGP,OAAO,MAAMO,MAAM,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC5C,MAAIC,IAAI,GAAG,MAAMhB,OAAO,CAACiB,EAAR,EAAjB;;AAEA,MAAID,IAAI,CAACE,UAAL,KAAoB,CAAxB,EAA2B;AACvB,QAAI;AAACd,MAAAA,EAAD;AAAKC,MAAAA,KAAL;AAAYC,MAAAA,KAAZ;AAAmBC,MAAAA;AAAnB,QAA6BS,IAAI,CAACA,IAAtC;AACAD,IAAAA,QAAQ,CAACF,eAAe,CAACT,EAAD,EAAKC,KAAL,EAAYC,KAAZ,EAAmB,IAAnB,CAAhB,CAAR;AACH;AACJ,CAPM;AASP,OAAO,MAAMA,KAAK,GAAG,CAACD,KAAD,EAAQc,QAAR,EAAkBC,UAAlB,KAAiC,MAAOL,QAAP,IAAoB;AACtE,MAAIC,IAAI,GAAG,MAAMhB,OAAO,CAACM,KAAR,CAAcD,KAAd,EAAqBc,QAArB,EAA+BC,UAA/B,CAAjB;;AAEA,MAAIJ,IAAI,CAACE,UAAL,KAAoB,CAAxB,EAA2B;AACvBH,IAAAA,QAAQ,CAACD,MAAM,EAAP,CAAR;AACH,GAFD,MAEO;AACH,QAAIO,OAAO,GAAGL,IAAI,CAACM,QAAL,CAAcC,MAAd,GAAuB,CAAvB,GAA2BP,IAAI,CAACM,QAAL,CAAc,CAAd,CAA3B,GAA8C,YAA5D;AACAP,IAAAA,QAAQ,CAACd,UAAU,CAAC,OAAD,EAAS;AAACuB,MAAAA,MAAM,EAAEH;AAAT,KAAT,CAAX,CAAR;AACH;AACJ,CATM;AAWP,OAAO,MAAMI,MAAM,GAAG,MAAM,MAAOV,QAAP,IAAoB;AAC5C,MAAIC,IAAI,GAAG,MAAMhB,OAAO,CAACyB,MAAR,EAAjB;;AAEA,MAAIT,IAAI,CAACE,UAAL,KAAoB,CAAxB,EAA2B;AACvBH,IAAAA,QAAQ,CAACF,eAAe,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,KAAnB,CAAhB,CAAR;AACH;AACJ,CANM;AASP,eAAeL,WAAf","sourcesContent":["import {authAPI} from \"../../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'goToIt/auth/SET_USER_DATA'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload: { id, email, login, isAuth } })\r\n\r\nexport const authMe = () => async (dispatch) => {\r\n    let data = await authAPI.me()\r\n\r\n    if (data.resultCode === 0) {\r\n        let {id, email, login, isAuth} = data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let data = await authAPI.login(email, password, rememberMe)\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(authMe())\r\n    } else {\r\n        let message = data.messages.length > 0 ? data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login',{_error: message}))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let data = await authAPI.logout()\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer\r\n"]},"metadata":{},"sourceType":"module"}