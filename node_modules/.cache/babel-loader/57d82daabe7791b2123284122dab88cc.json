{"ast":null,"code":"var _jsxFileName = \"/Users/ihorvasilenko/Desktop/work/it-incubator/react/social-networks/SocialNetwork/src/component/User/content/wall/myPosts/post/postElement/PostElement.jsx\";\nimport React from \"react\";\nimport s from './PostElement.module.css';\nimport UserContentWallMyPostsPostComment from \"../comments/Comment\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../../../../../utils/validators/validators\";\nimport { Textarea } from \"../../../../../../common/formsControl/FormsControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostItem = /*#__PURE__*/React.memo(_c = props => {\n  let addNewComment = values => {\n    props.addComment(values.newCommentText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.post,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.addedMedia,\n      children: props.media\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.header,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: process.env.PUBLIC_URL + props.avatar,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.postInformations,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.authorName,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: props.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.publicationDate,\n          children: [props.passed, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: s.likes,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: process.env.PUBLIC_URL + \"./likeIcon.png\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.likesCount,\n          children: props.likesCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.text,\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(UserContentWallMyPostsPostComment, {\n      commentsData: props.commentsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CommentReduxForm, {\n      onSubmit: addNewComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n});\n_c2 = PostItem;\nconst maxLength10 = maxLengthCreator(10);\n\nconst CommentForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: s.addMyComent,\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: process.env.PUBLIC_URL + \"./myAvatar.jpg\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      name: 'newCommentText',\n      component: Textarea,\n      placeholder: 'Add comment...',\n      validate: [required, maxLength10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = CommentForm;\nconst CommentReduxForm = reduxForm({\n  form: 'newCommentForm'\n})(CommentForm);\n\nconst MediaItem = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.addedMedia,\n    children: props.media\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 12\n  }, this);\n};\n\n_c4 = MediaItem;\nexport { PostItem, MediaItem };\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"PostItem$React.memo\");\n$RefreshReg$(_c2, \"PostItem\");\n$RefreshReg$(_c3, \"CommentForm\");\n$RefreshReg$(_c4, \"MediaItem\");","map":{"version":3,"sources":["/Users/ihorvasilenko/Desktop/work/it-incubator/react/social-networks/SocialNetwork/src/component/User/content/wall/myPosts/post/postElement/PostElement.jsx"],"names":["React","s","UserContentWallMyPostsPostComment","Field","reduxForm","maxLengthCreator","required","Textarea","PostItem","memo","props","addNewComment","values","addComment","newCommentText","post","addedMedia","media","header","process","env","PUBLIC_URL","avatar","postInformations","authorName","name","publicationDate","passed","likes","likesCount","text","commentsData","maxLength10","CommentForm","addMyComent","handleSubmit","CommentReduxForm","form","MediaItem"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport s from './PostElement.module.css';\r\nimport UserContentWallMyPostsPostComment from \"../comments/Comment\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../../../../common/formsControl/FormsControl\";\r\n\r\nconst PostItem = React.memo((props) => {\r\n    let addNewComment = (values) => {\r\n        props.addComment(values.newCommentText)\r\n    }\r\n\r\n    return <div className={s.post}>\r\n        <div className={s.addedMedia}>{props.media}</div>\r\n        <div className={s.header}   >\r\n            <img src={process.env.PUBLIC_URL + props.avatar} alt=\"\"/>\r\n            <div className={s.postInformations}>\r\n                <div className={s.authorName}>\r\n                    <a href=\"#\">\r\n                        {props.name}\r\n                    </a>\r\n                </div>\r\n                <div className={s.publicationDate}>\r\n                    {props.passed}.\r\n                </div>\r\n            </div>\r\n            <span className={s.likes}> {/*Иконка для лайков.*/}\r\n                <div>\r\n                    <img src={process.env.PUBLIC_URL + \"./likeIcon.png\"} alt=\"\"/>\r\n                        </div>\r\n                        <div className={s.likesCount}>\r\n                            {props.likesCount}\r\n                        </div>\r\n                    </span>\r\n        </div>\r\n        <div className={s.text}>\r\n            {props.text}\r\n        </div>\r\n        <UserContentWallMyPostsPostComment commentsData={props.commentsData} />\r\n        <CommentReduxForm onSubmit={addNewComment}/>\r\n    </div>\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst CommentForm = (props) => {\r\n    return (\r\n        <form className={s.addMyComent} onSubmit={props.handleSubmit}>\r\n            <img src={process.env.PUBLIC_URL + \"./myAvatar.jpg\"} alt=\"\"/>\r\n            <Field name={'newCommentText'} component={Textarea} placeholder={'Add comment...'} validate={[required, maxLength10]} />\r\n            <button>Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst CommentReduxForm = reduxForm({form: 'newCommentForm'}) (CommentForm)\r\n\r\nconst MediaItem = (props) => {\r\n    return <div className={s.addedMedia}>\r\n        {props.media}\r\n        {/**/}\r\n    </div>\r\n}\r\n\r\nexport {\r\n    PostItem,\r\n    MediaItem,\r\n}\r\n"]},"metadata":{},"sourceType":"module"}