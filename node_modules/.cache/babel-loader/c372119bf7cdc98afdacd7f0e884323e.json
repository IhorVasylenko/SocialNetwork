{"ast":null,"code":"import * as axios from \"axios\";\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\n    \"API-KEY\": \"0590a1e8-ea10-4bc4-a086-b475e4beea64\"\n  }\n});\nexport const usersAPI = {\n  getUsers(currentPage = 1, pageSize = 9) {\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`, {}).then(response => response.data);\n  }\n\n};\nexport const followAPI = {\n  follow(id) {\n    return instance.post(`follow/${id}`, {}, {}).then(response => response.data);\n  },\n\n  unfollow(id) {\n    return instance.delete(`follow/${id}`, {}).then(response => response.data);\n  }\n\n};\nexport const profileAPI = {\n  getUserData(userId) {\n    return instance.get(`profile/` + userId, {}).then(response => response.data);\n  },\n\n  getStatus(userId) {\n    return instance.get(`profile/status/` + userId, {}).then(response => response.data);\n  },\n\n  updateStatus(status) {\n    return instance.put(`profile/status`, {\n      status\n    }, {}).then(response => response.data);\n  }\n\n};\nexport const authAPI = {\n  me() {\n    return instance.get(`auth/me`, {}).then(response => response.data);\n  },\n\n  login(email, password, rememberMe = false) {\n    return instance.post(`auth/login`, {\n      email,\n      password,\n      rememberMe\n    }, {}).then(response => response.data);\n  },\n\n  logout() {\n    return instance.delete(`auth/login`, {}).then(response => response.data);\n  }\n\n};","map":{"version":3,"sources":["/Users/ihorvasilenko/Desktop/work/it-incubator/react/social-networks/SocialNetwork/src/component/api/api.js"],"names":["axios","instance","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","followAPI","follow","id","post","unfollow","delete","profileAPI","getUserData","userId","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAc;AAC3BC,EAAAA,eAAe,EAAE,IADU;AAE3BC,EAAAA,OAAO,EAAE,+CAFkB;AAG3BC,EAAAA,OAAO,EAAE;AACL,eAAW;AADN;AAHkB,CAAd,CAAjB;AAQA,OAAO,MAAMC,QAAQ,GAAG;AACpBC,EAAAA,QAAQ,CAACC,WAAW,GAAG,CAAf,EAAkBC,QAAQ,GAAG,CAA7B,EAAgC;AACpC,WAAOR,QAAQ,CAACS,GAAT,CAAc,cAAaF,WAAY,UAASC,QAAS,EAAzD,EAA4D,EAA5D,EAAgEE,IAAhE,CAAqEC,QAAQ,IAAIA,QAAQ,CAACC,IAA1F,CAAP;AACH;;AAHmB,CAAjB;AAMP,OAAO,MAAMC,SAAS,GAAG;AACrBC,EAAAA,MAAM,CAACC,EAAD,EAAK;AACP,WAAOf,QAAQ,CAACgB,IAAT,CAAe,UAASD,EAAG,EAA3B,EAA8B,EAA9B,EAAkC,EAAlC,EAAsCL,IAAtC,CAA2CC,QAAQ,IAAIA,QAAQ,CAACC,IAAhE,CAAP;AACH,GAHoB;;AAIrBK,EAAAA,QAAQ,CAACF,EAAD,EAAK;AACT,WAAOf,QAAQ,CAACkB,MAAT,CAAiB,UAASH,EAAG,EAA7B,EAAgC,EAAhC,EAAoCL,IAApC,CAAyCC,QAAQ,IAAIA,QAAQ,CAACC,IAA9D,CAAP;AACH;;AANoB,CAAlB;AASP,OAAO,MAAMO,UAAU,GAAG;AACtBC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,WAAOrB,QAAQ,CAACS,GAAT,CAAc,UAAD,GAAaY,MAA1B,EAAkC,EAAlC,EAAsCX,IAAtC,CAA2CC,QAAQ,IAAIA,QAAQ,CAACC,IAAhE,CAAP;AACH,GAHqB;;AAItBU,EAAAA,SAAS,CAACD,MAAD,EAAS;AACd,WAAOrB,QAAQ,CAACS,GAAT,CAAc,iBAAD,GAAoBY,MAAjC,EAAyC,EAAzC,EAA6CX,IAA7C,CAAkDC,QAAQ,IAAIA,QAAQ,CAACC,IAAvE,CAAP;AACH,GANqB;;AAOtBW,EAAAA,YAAY,CAACC,MAAD,EAAS;AACjB,WAAOxB,QAAQ,CAACyB,GAAT,CAAc,gBAAd,EAA+B;AAAED,MAAAA;AAAF,KAA/B,EAA2C,EAA3C,EAA+Cd,IAA/C,CAAoDC,QAAQ,IAAIA,QAAQ,CAACC,IAAzE,CAAP;AACH;;AATqB,CAAnB;AAaP,OAAO,MAAMc,OAAO,GAAG;AACnBC,EAAAA,EAAE,GAAI;AACF,WAAO3B,QAAQ,CAACS,GAAT,CAAc,SAAd,EAAwB,EAAxB,EAA4BC,IAA5B,CAAiCC,QAAQ,IAAIA,QAAQ,CAACC,IAAtD,CAAP;AACH,GAHkB;;AAInBgB,EAAAA,KAAK,CAAEC,KAAF,EAASC,QAAT,EAAmBC,UAAU,GAAG,KAAhC,EAAuC;AACxC,WAAO/B,QAAQ,CAACgB,IAAT,CAAe,YAAf,EAA4B;AAACa,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,KAA5B,EAA2D,EAA3D,EAA+DrB,IAA/D,CAAoEC,QAAQ,IAAIA,QAAQ,CAACC,IAAzF,CAAP;AACH,GANkB;;AAOnBoB,EAAAA,MAAM,GAAI;AACN,WAAOhC,QAAQ,CAACkB,MAAT,CAAiB,YAAjB,EAA8B,EAA9B,EAAkCR,IAAlC,CAAuCC,QAAQ,IAAIA,QAAQ,CAACC,IAA5D,CAAP;AACH;;AATkB,CAAhB","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create ({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"0590a1e8-ea10-4bc4-a086-b475e4beea64\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 9) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`, {}).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const followAPI = {\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`, {}, {}).then(response => response.data)\r\n    },\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`, {}).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserData(userId) {\r\n        return instance.get(`profile/` + userId, {}).then(response => response.data)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId, {}).then(response => response.data)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status }, {}).then(response => response.data)\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me () {\r\n        return instance.get(`auth/me`, {}).then(response => response.data);\r\n    },\r\n    login (email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe}, {}).then(response => response.data);\r\n    },\r\n    logout () {\r\n        return instance.delete(`auth/login`, {}).then(response => response.data);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}