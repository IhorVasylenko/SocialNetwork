{"ast":null,"code":"import { followAPI, usersAPI } from \"../../api/api\";\nconst FOLLOW = 'goToIt/addFriends/FOLLOW';\nconst UNFOLLOW = 'goToIt/addFriends/UNFOLLOW';\nconst SET_USERS = 'goToIt/addFriends/SET_USERS';\nconst SET_CURRENT_PAGE = 'goToIt/addFriends/SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'goToIt/addFriends/SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'goToIt/addFriends/TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'goToIt/addFriends/TOGGLE_IS_FOLLOWING_PROGRESS';\nlet initialState = {\n  usersData: [],\n  pageSize: 9,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: []\n};\n\nconst addFriendsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        usersData: state.usersData.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        usersData: state.usersData.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        usersData: action.usersData\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case SET_TOTAL_USERS_COUNT:\n      return { ...state,\n        totalUsersCount: action.totalCount\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return { ...state,\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id !== action.userId)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followSuccess = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowSuccess = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = usersData => ({\n  type: SET_USERS,\n  usersData\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = totalCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId\n});\nexport const getUsers = (requestedPage, pageSize) => {\n  return async dispatch => {\n    dispatch(toggleIsFetching(true));\n    dispatch(setCurrentPage(requestedPage));\n    let data = await usersAPI.getUsers(requestedPage, pageSize);\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(data.items));\n    dispatch(setTotalUsersCount(data.totalCount));\n  };\n};\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n  dispatch(toggleFollowingProgress(true, userId));\n  let data = await apiMethod(userId);\n  dispatch(toggleFollowingProgress(false, userId));\n\n  if (data.resultCode === 0) {\n    dispatch(actionCreator(userId));\n  }\n};\n\nexport const unfollow = userId => {\n  return async dispatch => {\n    followUnfollowFlow(dispatch, userId, followAPI.follow.bind(followAPI), followSuccess);\n  };\n};\nexport const follow = userId => {\n  return async dispatch => {\n    followUnfollowFlow(dispatch, userId, followAPI.unfollow.bind(followAPI), unfollowSuccess);\n  };\n};\nexport default addFriendsReducer;","map":{"version":3,"sources":["/Users/ihorvasilenko/Desktop/work/it-incubator/react/social-networks/SocialNetwork/src/component/UI/state/addFriendsReducer.js"],"names":["followAPI","usersAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","usersData","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","addFriendsReducer","state","action","type","map","u","id","userId","followed","totalCount","filter","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","getUsers","requestedPage","dispatch","data","items","followUnfollowFlow","apiMethod","actionCreator","resultCode","unfollow","follow","bind"],"mappings":"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","sourcesContent":["import {followAPI, usersAPI} from \"../../api/api\"\r\n\r\nconst FOLLOW = 'goToIt/addFriends/FOLLOW'\r\nconst UNFOLLOW = 'goToIt/addFriends/UNFOLLOW'\r\nconst SET_USERS = 'goToIt/addFriends/SET_USERS'\r\nconst SET_CURRENT_PAGE = 'goToIt/addFriends/SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'goToIt/addFriends/SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'goToIt/addFriends/TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'goToIt/addFriends/TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    usersData: [],\r\n    pageSize: 9,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst addFriendsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                usersData: state.usersData.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                usersData: state.usersData.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                usersData: action.usersData\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (usersData) => ({type: SET_USERS, usersData})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const getUsers = (requestedPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(requestedPage))\r\n\r\n        let data = await usersAPI.getUsers(requestedPage, pageSize)\r\n\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let data = await apiMethod(userId)\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, followAPI.follow.bind(followAPI), followSuccess)\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, followAPI.unfollow.bind(followAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\n\r\nexport default addFriendsReducer\r\n"]},"metadata":{},"sourceType":"module"}